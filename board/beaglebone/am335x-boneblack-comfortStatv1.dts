/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
};

&mmc2 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	bus-width = <8>;
	ti,non-removable;
	status = "okay";
};

&am33xx_pinmux {
	cape_v1_gpio_pins: cape_v1_gpio_pins {
                pinctrl-single,pins = <
                    /***** P8 *****/
                    0x090 0x2f  /* Right btn (in,  mode 7) */
                    0x094 0x2f  /* dig therm (in,  mode 7) */
                    0x09c 0x2f  /* Left btn  (in,  mode 7) */
                    0x098 0x2f  /* Down btn  (in,  mode 7) */
                    0x034 0x2f  /* up btn    (in,  mode 7) */
                    0x030 0x2f  /* a btn     (in,  mode 7) */
                    0x024 0x0f  /* Cool S    (out, mode 7) */
                    0x028 0x0f  /* cool r    (out, mode 7) */
                    0x03c 0x0f  /* fan r     (out, mode 7) */
                    0x038 0x0f  /* fan s     (out, mode 7) */
                    0x02c 0x0f  /* head r    (out, mode 7) */
                    0x08c 0x0f  /* head s    (out, mode 7) */
                    /***** P9 *****/
                    0x154 0x2f  /* encode b  (in,  mode 7) */
                    0x150 0x2f  /* rfm_int   (in,  mode 7) */
                    0x044 0x0f  /* led r     (out, mode 7) */
                    0x1ac 0x0f  /* led g     (out, mode 7) */
                    0x1a4 0x0f  /* led b     (out, mode 7) */
                    /* spi.... */
                    /* adc .... */
                 /*   0x1a8 0x0f*/  /* encode a  (in,  mode 7) */
                 /*   0x1b4 0x0f*/
                 /*   0x1a0 0x0f*/  /* encode sw (in,  mode 7) */
                 /*   0x164 0x0f*/
                    0x17c 0x73  /* i2c2 scl */
                    0x178 0x73  /* i2c2 sda */
                >;
        };

	cape_v2_gpio_pins: cape_v2_gpio_pins {
		pinctrl-single,pins = <
                    /***** P8 *****/
                    0x090 0x0f  /* 7 - led b       (out,  mode 7) */
                    0x094 0x0f  /* 8 - led r       (out,  mode 7) */
                    0x09c 0x0f  /* 9 - led g       (out,  mode 7) */
                    0x098 0x0f  /* 10 - heat cntl  (out,  mode 7) */
                    0x030 0x0f  /* 12 - cool cntl  (out,  mode 7) */
                    0x028 0x0f  /* 14 - fan cntl   (out,  mode 7) */
                    0x038 0x0f  /* 16 - aux cntl   (out,  mode 7) */

                    /***** P9 *****/
                /*    0x04c 0x0f   16 - dig therm  (in,  mode 7) */
                    0x15c 0x2f  /* 17 - up btn     (in,  mode 7) */
                    0x158 0x2f  /* 18 - down btn   (in,  mode 7) */
                    0x150 0x2f  /* 22 - rfm_int    (in,  mode 7) */
                    /* spi.... */
                    /* adc .... */
                    0x1a4 0x31  /* 27 - encode b   (in , mode 1, eQEP0B) */
                    0x1a8 0x2f  /* 41 - encode sw  (in,  mode 7) */
                  /*  0x1b4 0x0f   not used, set in safe input state */
                  /*  0x1a0 0x31   42 - encode a   (in,  mode 1, eQEP0A) */
                  /*  0x164 0x0f   not used, set in safe input state */

                    0x17c 0x73  /* i2c2 scl */
                    0x178 0x73  /* i2c2 sda */
		>;
	};
	i2c2_pins: i2c2_pins {
		pinctrl-single,pins = <
                    0x17c 0x73  /* i2c2 scl */
                    0x178 0x73  /* i2c2 sda */
		>;
	};
	uart1_pins: uart1_pins {
		pinctrl-single,pins = <
                    0x180 0x20  /* uart rx */
                    0x184 0x00  /* uart tx */
		>;
	};
	/* unused for now, done as a helper block of io */
	eqep0_pins: eqep0_pins {
		pinctrl-single,pins = <
                    0x1a4 0x31  /* 27 - encode b   (in , mode 1, eQEP0B) */
                    0x1a8 0x2f  /* 41 - encode sw  (in,  mode 7) */
                    0x1b4 0x2f  /* not used, set in safe input state */
                    0x1a0 0x31  /* 42 - encode a   (in,  mode 1, eQEP0A) */
                    0x164 0x2f  /* not used, set in safe input state */
		>;
	};
};

/*&ocp {
	pinmux_helper_capeio {
		compatible = "bone-pinmux-helper";
		status = "okay";
		pinctrl-names = "default";
		pinctrl-0 = <&cape_v2_gpio_pins>;
	};
};*/
	/* todo break out common io into peripheral helpers */

&i2c2 {
	pinctrl-names = "default";
	/*pinctrl-0 = <&i2c2_pins>;*/
	pinctrl-0 = <&cape_v1_gpio_pins>;
	clock-frequency = <100000>;
	status = "okay";
	#address-cells = <1>;
	#size-cells = <0>;
	/* temp and humidity sensor */
	/* v2 board only */
	si7020@40 {
	      compatible = "si7020,si7020";
	      reg = <0x40>;
	};
	/* eeprom */
	at24@57 {
	      compatible = "at24,24c256";
	      reg = <0x57>;
	};
};

/* lcd output */
&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;
	status = "okay";
};

/* v2 board only */
&eqep0 {
/*	pinctrl-names = "default";
	pinctrl-0 = <&eqep0_pins>;*/

	count_mode = <0>; /* 0 - Quadrature mode, normal 90 phase offset cha & chb. */
			  /* 1 - Direction mode. cha input = clock, chb input = direction */
	swap_inputs = <0>; /* Are channel A and channel B swapped? (0 - no, 1 - yes) */
	invert_qa = <0>; /* Should we invert the channel A input? */
	invert_qb = <0>; /* Should we invert the channel B input? */
	invert_qi = <0>; /* Should we invert the index input? */
	invert_qs = <0>; /* Should we invert the strobe input? */
/*	status = "okay";*/
};
